spring.security.oauth2.client.registration.goonies-oauth-client.provider=google
spring.security.oauth2.client.registration.goonies-oauth-client.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.goonies-oauth-client.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.goonies-oauth-client.redirect-uri=https://localhost:8080/login/oauth2/code/goonies-oauth-client
spring.security.oauth2.client.registration.goonies-oauth-client.scope[0]=openid
spring.security.oauth2.client.registration.goonies-oauth-client.scope[1]=profile
spring.security.oauth2.client.registration.goonies-oauth-client.scope[2]=email

# Visit accounts.google.com/.well-known/openid-configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub
